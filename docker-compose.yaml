services:
#BECAUSE DB IS NOT SET YET, I COMMENT OUT THIS PART
    psql:
        image: postgres:13-alpine
        # build: ./backend/database
        container_name: postgres
        restart: always
        networks:
            - transcendence
        ports:
            - "5439:5432"
        env_file:
            - ./dot_env/.env
        volumes:
            - ./pgdata:/var/lib/postgresql/data/
        # - ./backend/database/init_database.sh:/init_database.sh  # Ensure this is mounted correctly
        # entrypoint: ["sh", "-c", "./backend/database/init_database.sh && python manage.py runserver 0.0.0.0:8000"]


 #INSTEAD OF CONTAINERS NAMED "BACKEND", CONTAINERS WITH SPECIFIC NAMES ARE IN USE BELOW (matchmaking, x, y, etc)
  # backend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: project_name_backend
  #   command: sh -c "python3 manage.py migrate --npinput && python3 manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"
  #   restart: always
  #   volumes:
  #     - .:/app
  #   ports:
  #     - "8000:8000"
  #   env_file:
  #     - .env
  #   depends_on:
  #     - db

    # matchmaking:
    #     build: ./matchmaking_/docker
    #     container_name: matchmaking
    #     #command: sh -c "python3 manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    #     volumes:
    #         - ./matchmaking_/:/app/
    #     ports:
    #         - "8000:8000"
    #     restart: on-failure

    backend:
        build: ./backend/docker
        container_name: backend
        #command: sh -c "python3 manage.py migrate && python manage.py runserver 0.0.0.0:8000"
        volumes:
            - ./backend/:/app/
        ports:
            - "8000:8000"
        networks:
            - transcendence
        restart: on-failure
        networks:
            - transcendence

networks:
    transcendence:
        driver: bridge

    frontend:
        build: ./frontend
        container_name: frontend
        volumes:
            - ./frontend/statics/:/usr/share/nginx/html/static/
        ports:
            - "8080:80"
        networks:
            - transcendence
        depends_on:
        - backend

networks:
  transcendence:
    driver: bridge

# volumes:
#   data:
#     driver: local