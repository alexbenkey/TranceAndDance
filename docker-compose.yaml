#this can be created by another container before all elk setup???
secrets:
  elasticsearch.keystore:
    file: ./monitoring/secrets/keystore/elasticsearch.keystore
  elasticsearch.service_tokens:
    file: ./monitoring/secrets/service_tokens
  elastic.ca:
    file: ./monitoring/secrets/certs/ca/ca.crt
  elasticsearch.certificate:
    file: ./monitoring/secrets/certs/elasticsearch/elasticsearch.crt
  elasticsearch.key:
    file: ./monitoring/secrets/certs/elasticsearch/elasticsearch.key
  kibana.certificate:
    file: ./monitoring/secrets/certs/kibana/kibana.crt
  kibana.key:
    file: ./monitoring/secrets/certs/kibana/kibana.key

services:
  psql:
      image: postgres:13-alpine
      container_name: postgres
      restart: always
      networks:
          - transcendence
      ports:
          - "5432:5432"
      env_file:
          - ./dot_env/.env
      volumes:
          #- pgdata:/var/lib/postgresql/data/
          - ${HOME}/.tranceanddance/pgdata:/var/lib/postgresql/data/

  backend:
    build: ./backend/docker
    container_name: backend
    volumes:
      - ./backend/:/app/
      - ./monitoring/logs:/var/log/django
    ports:
      - "8000:8000"
    env_file:
      - ./dot_env/.env     
    networks:
      - transcendence
    # command: python3 ./backend/game_server/game_server.py
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - psql

  frontend:
      build: ./frontend
      container_name: frontend
      volumes:
          - ./frontend/statics/:/usr/share/nginx/html/static/
          - ./monitoring/logs/nginx:/var/log/nginx
      ports:
          - "8080:80"
      networks:
          - transcendence
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"

      depends_on:
      - backend
      - psql

  elasticsearch:
    #image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    container_name: elasticsearch
    build: ./monitoring/elastic
    # environment:
    #   - discovery.type=single-node
    #   - ES_JAVA_OPTS=-Xms512m -Xmx512m 
    #   - xpack.security.enabled=false  # Disable security for dev ??
    ports:
      - "9200:9200"
    # env_file:
    #   - ./dot_env/.env
    # volumes:
    #   - ${HOME}/.tranceanddance/elasticdata:/usr/share/elasticsearch/data
    volumes:
      - ${HOME}/.tranceanddance/elasticdata:/usr/share/elasticsearch/data
      - ${HOME}/.tranceanddance/elasticcerts:/secrets
      - ./monitoring/secrets:/secrets
      #- .env.kibana/:/usr/share/elasticsearch/config/.env.kibana.token
      - ./monitoring/elastic/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./monitoring/elastic/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties
      #- ${HOME}/.tranceanddance/elasticconfig:/usr/share/elasticsearch/config
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      xpack.security.enabled: true
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      KIBANA_PASSWORD: ${KIBANA_PASSWORD}
      LOGSTASH_PASSWORD: ${LOGSTASH_PASSWORD}
      ELASTIC_CA_PASSWORD: ${ELASTIC_CA_PASSWORD}
      ELASTIC_CERT_PASSWORD: ${ELASTIC_CERT_PASSWORD}
      KIBANA_KEYSTORE_PASSWORD: ${KIBANA_KEYSTORE_PASSWORD}
      LOGSTASH_KEYSTORE_PASSWORD: ${LOGSTASH_KEYSTORE_PASSWORD}
      FILEBEAT_KEYSTORE_PASSWORD: ${FILEBEAT_KEYSTORE_PASSWORD}
    secrets:
      - source: elasticsearch.keystore
        target: /usr/share/elasticsearch/config/elasticsearch.keystore
      - source: elasticsearch.service_tokens
        target: /usr/share/elasticsearch/config/service_tokens
      - source: elastic.ca
        target: /usr/share/elasticsearch/config/certs/ca.crt
      - source: elasticsearch.certificate
        target: /usr/share/elasticsearch/config/certs/elasticsearch.crt
      - source: elasticsearch.key
        target: /usr/share/elasticsearch/config/certs/elasticsearch.key
    networks:
      - transcendence

  logstash:
    #image: docker.elastic.co/logstash/logstash:8.17.0
    container_name: logstash
    build: ./monitoring/logstash
    ports:
      - "5044:5044"
    volumes:
      - ./monitoring/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    networks:
      - transcendence

  kibana:
    #image: docker.elastic.co/kibana/kibana:8.17.0
    container_name: kibana
    build: ./monitoring/kibana
    env_file:
      - ${HOME}/.tranceanddance/elasticcerts/.env.kibana.token
    ports:
      - "5601:5601"
    volumes:
      - ${HOME}/.tranceanddance/elasticcerts:/usr/share/kibana/config/certs:ro
      #- ${HOME}/.tranceanddance/kibanadata:/usr/share/kibana/data
    environment:
      - ELASTIC_CERT_PASSWORD=${ELASTIC_CERT_PASSWORD}
      - KIBANA_KEYSTORE_PASSWORD=${KIBANA_KEYSTORE_PASSWORD}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
      - ELASTIC_HOSTS=https://elasticsearch:9200
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTICSEARCH_HOST_PORT=9200
    secrets:
      - source: elastic.ca
        target: /certs/ca.crt
      - source: kibana.certificate
        target: /certs/kibana.crt
      - source: kibana.key
        target: /certs/kibana.key
    depends_on:
      - elasticsearch
    networks:
      - transcendence

  filebeat:
    #image: docker.elastic.co/beats/filebeat:8.17.0
    container_name: filebeat
    build: ./monitoring/filebeat
    volumes:
      - ./monitoring/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./monitoring/logs:/var/log/django:ro
      - ./monitoring/logs/nginx:/var/log/nginx:ro

    # user: root  # Might be needed for file permissions
    # command: ["filebeat", "run", "-e", "--strict.perms=false"]  # Fixed command syntax
    depends_on:
      - logstash
    networks:
      - transcendence

networks:
  transcendence:
    driver: bridge

volumes:
  elasticsearch_data:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: $HOME/.tranceanddance/elasticdata
  certs:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: $HOME/.tranceanddance/elasticcerts
    
  pgdata:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: $HOME/.tranceanddance/pgdata
  backenddata:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: $HOME/.tranceanddance/backenddata

